# Import required libraries
import re
import os
import time
import random
import speech_recognition as sr
import playsound

# Define some variables
greeting = 'Hello! How has your day been, {user_name}? Is there anything I can help you with? I would love to spend time with you and make your day better! <3'

# Code the self-attention fwd pass
def forward(self, query, key, value, mask=None):
    batch_size = query.shape[0]
    seq_length = query.shape[1]

    query = self.q_linear(query)
    key = self.k_linear(key)
    value = self.v_linear(value)

    query = query.view(batch_size, seq_length, self.num_heads, self.head_dim).permute(0, 2, 1, 3)
    key = key.view(batch_size, seq_length, self.num_heads, self.head_dim).permute(0, 2, 1, 3)
    value = value.view(batch_size, seq_length, self.num_heads, self.head_dim).permute(0, 2, 1, 3)

    energy = torch.matmul(query, key.permute(0, 1, 3, 2)) / (self.head_dim ** 0.5)

    if mask is not None:
        energy = energy.masked_fill(mask == 0, float("-1e20"))

    attention = torch.softmax(energy, dim=-1)

    out = torch.matmul(attention, value).permute(0, 2, 1, 3).contiguous().view(batch_size, seq_length, self.d_model)
    out = self.fc_out(out)

    return out
